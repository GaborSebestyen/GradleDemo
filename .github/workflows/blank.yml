# This is a basic workflow to help you get started with Actions

name: CI with Java and Gradle

# Controls when the workflow will run
on: 
  push:
    branches: [main]
  pull_request:
    branches: [main]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains three jobs
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Setup Java
    - uses: actions/checkout@v2
    - name: Setup JDK 11
      uses: actions/setup-java@v2      
      with:
        java-version: 11
        distribution: 'adopt'
        # Using gradle cache to improve efficiencies
        cache: gradle    
      
    # Make gradlew executable
    - name: Make Gradlew executable
      run: chmod +x ./gradlew
    # Run our build using gradle
    - name: Build with Gradle
      run: ./gradlew build
      
  # This workflow contains three jobs and an alternative job
  test_job:
    name: Test
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Setup Java
    - uses: actions/checkout@v2
    - name: Setup JDK 11
      uses: actions/setup-java@v2      
      with:
        java-version: 11
        distribution: 'adopt'
        cache: gradle
   

    # Make gradlew executable
    - name: Make Gradlew executable
      run: chmod +x ./gradlew
    # Run test
    - name: Running appHasAGreeting test
      run: ./gradlew test --tests AppTest.appHasAGreeting
    # Open Gradle test report upon fail
    - if: failure()
      run: ls app/build/reports/tests/test/index.html
    
          
          
  assemble_job:
    name: Assemble
    runs-on: ubuntu-latest
    steps:
      - name: Save Build Scan Log
        uses: actions/upload-artifact@v2
        with:
          name: buildscan-assemble
          path: 'buildscan.log'
